{
  "name": "post-object-async-demo",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "post-object",
    "badge",
    "button",
    "popover",
    "command",
    "select"
  ],
  "files": [
    {
      "path": "examples/post-object-async-demo.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { PostObject, type PostObjectItem, type PostObjectFilter } from \"@/registry/default/ui/post-object\"\n\n// Simulate a large dataset\nconst mockDatabase = [\n  {\n    id: 1,\n    title: \"Introduction to React Hooks\",\n    type: \"post\",\n    status: \"publish\" as const,\n    taxonomy: [\"React\", \"JavaScript\", \"Frontend\"],\n    excerpt: \"Learn how to use React Hooks to manage state and side effects in functional components...\",\n    date: \"2024-01-15\",\n    featured_image: \"https://picsum.photos/400/300?random=1\",\n    url: \"/posts/react-hooks-intro\",\n  },\n  {\n    id: 2,\n    title: \"Advanced TypeScript Patterns\",\n    type: \"post\",\n    status: \"publish\" as const,\n    taxonomy: [\"TypeScript\", \"Advanced\", \"Development\"],\n    excerpt: \"Explore advanced TypeScript patterns including conditional types, mapped types, and template literals...\",\n    date: \"2024-01-10\",\n    featured_image: \"https://picsum.photos/400/300?random=2\",\n    url: \"/posts/advanced-typescript\",\n  },\n  {\n    id: 3,\n    title: \"Building Responsive UIs\",\n    type: \"tutorial\",\n    status: \"publish\" as const,\n    taxonomy: [\"CSS\", \"Responsive\", \"UI\"],\n    excerpt: \"Create beautiful, responsive user interfaces that work on all devices...\",\n    date: \"2024-01-05\",\n    featured_image: \"https://picsum.photos/400/300?random=3\",\n    url: \"/tutorials/responsive-ui\",\n  },\n  {\n    id: 4,\n    title: \"State Management with Zustand\",\n    type: \"guide\",\n    status: \"publish\" as const,\n    taxonomy: [\"State Management\", \"Zustand\", \"React\"],\n    excerpt: \"Learn how to manage application state efficiently with Zustand...\",\n    date: \"2024-01-20\",\n    featured_image: \"https://picsum.photos/400/300?random=4\",\n    url: \"/guides/zustand-state\",\n  },\n  {\n    id: 5,\n    title: \"API Design Best Practices\",\n    type: \"guide\",\n    status: \"draft\" as const,\n    taxonomy: [\"API\", \"Backend\", \"REST\"],\n    excerpt: \"Design robust and maintainable APIs that scale with your application...\",\n    date: \"2024-01-12\",\n    featured_image: \"https://picsum.photos/400/300?random=5\",\n    url: \"/guides/api-design\",\n  },\n  {\n    id: 6,\n    title: \"Component Architecture Patterns\",\n    type: \"tutorial\",\n    status: \"publish\" as const,\n    taxonomy: [\"Architecture\", \"Components\", \"React\"],\n    excerpt: \"Build scalable component architectures with these proven patterns...\",\n    date: \"2024-01-08\",\n    featured_image: \"https://picsum.photos/400/300?random=6\",\n    url: \"/tutorials/component-architecture\",\n  },\n  {\n    id: 7,\n    title: \"Testing React Components\",\n    type: \"post\",\n    status: \"publish\" as const,\n    taxonomy: [\"Testing\", \"React\", \"Jest\"],\n    excerpt: \"Write comprehensive tests for your React components using Jest and React Testing Library...\",\n    date: \"2024-01-25\",\n    featured_image: \"https://picsum.photos/400/300?random=7\",\n    url: \"/posts/testing-react\",\n  },\n  {\n    id: 8,\n    title: \"Performance Optimization\",\n    type: \"guide\",\n    status: \"publish\" as const,\n    taxonomy: [\"Performance\", \"Optimization\", \"React\"],\n    excerpt: \"Optimize your React applications for better performance and user experience...\",\n    date: \"2024-01-18\",\n    featured_image: \"https://picsum.photos/400/300?random=8\",\n    url: \"/guides/performance-optimization\",\n  },\n  {\n    id: 9,\n    title: \"Server-Side Rendering with Next.js\",\n    type: \"tutorial\",\n    status: \"draft\" as const,\n    taxonomy: [\"Next.js\", \"SSR\", \"React\"],\n    excerpt: \"Implement server-side rendering for better SEO and performance...\",\n    date: \"2024-01-03\",\n    featured_image: \"https://picsum.photos/400/300?random=9\",\n    url: \"/tutorials/nextjs-ssr\",\n  },\n  {\n    id: 10,\n    title: \"Database Design Fundamentals\",\n    type: \"guide\",\n    status: \"publish\" as const,\n    taxonomy: [\"Database\", \"SQL\", \"Backend\"],\n    excerpt: \"Learn the fundamentals of database design and normalization...\",\n    date: \"2024-01-14\",\n    featured_image: \"https://picsum.photos/400/300?random=10\",\n    url: \"/guides/database-design\",\n  },\n] satisfies PostObjectItem[]\n\n// Simulate API call with delay\nconst fetchPosts = async (filter: PostObjectFilter): Promise<PostObjectItem[]> => {\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 800))\n  \n  let filteredPosts = mockDatabase\n  \n  // Apply search filter\n  if (filter.search) {\n    const searchTerm = filter.search.toLowerCase()\n    filteredPosts = filteredPosts.filter(post => \n      post.title.toLowerCase().includes(searchTerm) ||\n      post.excerpt?.toLowerCase().includes(searchTerm) ||\n      post.taxonomy?.some(tag => tag.toLowerCase().includes(searchTerm))\n    )\n  }\n  \n  // Apply post type filter\n  if (filter.post_type && filter.post_type.length > 0) {\n    filteredPosts = filteredPosts.filter(post => \n      filter.post_type!.includes(post.type || \"\")\n    )\n  }\n  \n  // Apply post status filter\n  if (filter.post_status && filter.post_status.length > 0) {\n    filteredPosts = filteredPosts.filter(post => \n      filter.post_status!.includes(post.status || \"\")\n    )\n  }\n  \n  // Apply taxonomy filter\n  if (filter.taxonomy && filter.taxonomy.length > 0) {\n    filteredPosts = filteredPosts.filter(post => \n      post.taxonomy?.some(tag => filter.taxonomy!.includes(tag))\n    )\n  }\n  \n  return filteredPosts\n}\n\nexport default function PostObjectAsyncDemo() {\n  const [selectedPosts, setSelectedPosts] = useState<PostObjectItem[]>([])\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto space-y-4\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-2\">Dynamic Content Loader</h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          Search and filter from a large dataset with async loading\n        </p>\n      </div>\n\n      <PostObject\n        onLoad={fetchPosts}\n        selectedItems={selectedPosts}\n        onChange={(items) => setSelectedPosts(items as PostObjectItem[])}\n        multiple={true}\n        postTypes={[\"post\", \"guide\", \"tutorial\"]}\n        postStatuses={[\"publish\", \"draft\"]}\n        taxonomies={[\"React\", \"TypeScript\", \"CSS\", \"API\", \"Testing\", \"Performance\"]}\n        showFilters={[\"search\", \"post_type\", \"post_status\", \"taxonomy\"]}\n        showFeaturedImage={true}\n        showExcerpt={true}\n        showDate={true}\n        showPreview={true}\n        instructions=\"Start typing to search through our content database\"\n        placeholder=\"Search posts...\"\n        searchPlaceholder=\"Search posts by title, content, or tags...\"\n        loadingText=\"Searching content...\"\n      />\n\n      {selectedPosts.length > 0 && (\n        <div className=\"mt-8 p-4 bg-muted/30 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">Selected Content ({selectedPosts.length}):</h4>\n          <div className=\"grid gap-2\">\n            {selectedPosts.map((post) => (\n              <div key={post.id} className=\"flex items-center gap-3 p-2 bg-background rounded border\">\n                {post.featured_image && (\n                  <img\n                    src={post.featured_image}\n                    alt={post.title}\n                    className=\"w-12 h-12 rounded object-cover\"\n                  />\n                )}\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-sm\">{post.title}</div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {post.type} â€¢ {post.date}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n} ",
      "type": "registry:example",
      "target": ""
    }
  ]
}